version: '3.4'

volumes:
  datafiles: 
  logs_datafiles:
  vote_datafiles:
  reputation_datafiles:

services:
  daochain_rabbitmq:
    image: rabbitmq:3-management
    container_name: 'daochain_rabbitmq'
    environment:
        RABBITMQ_DEFAULT_USER: "daorabbit"
        RABBITMQ_DEFAULT_PASS: "dao2021*"
    ports:
        - 5673:5673
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/lib/log
    healthcheck:
        test: rabbitmq-diagnostics -q status
        interval: 10s
        timeout: 30s
        retries: 15
    
    networks:
        - daonetwork

  daochain_db:
    image: mysql:5.7
    platform: linux/x86_64
    volumes:
      - datafiles:/var/lib/mysql      
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=secred
      - MYSQL_DATABASE=daodb
    networks:
      - daonetwork

  daochain_logsdb:
    image: mysql:5.7
    platform: linux/x86_64
    volumes:
      - logs_datafiles:/var/lib/mysql      
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=secred
      - MYSQL_DATABASE=daologsdb
    networks:
      - daonetwork  

  daochain_votedb:
    image: mysql:5.7
    platform: linux/x86_64
    volumes:
      - vote_datafiles:/var/lib/mysql      
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=secred
      - MYSQL_DATABASE=daovotedb
    networks:
      - daonetwork  

  daochain_reputationdb:
    image: mysql:5.7
    platform: linux/x86_64
    volumes:
      - reputation_datafiles:/var/lib/mysql      
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=secred
      - MYSQL_DATABASE=daoreputationdb
    networks:
      - daonetwork  

  daochain_apigateway:
    image: ${DOCKER_REGISTRY-}daoapigateway
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_ApiGateway/Dockerfile
    depends_on:
      daochain_rabbitmq:
        condition: service_healthy
    links:
      - daochain_rabbitmq
    restart: always
    networks:
      - daonetwork

  daochain_dbservice:
    image: ${DOCKER_REGISTRY-}daodbservice
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_DbService/Dockerfile
    depends_on:      
      daochain_rabbitmq:
        condition: service_healthy
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - daonetwork

  daochain_identityservice:
    image: ${DOCKER_REGISTRY-}daoidentityservice
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_IdentityService/Dockerfile
    depends_on:
      daochain_rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
        - daonetwork

  daochain_logservice:
    image: ${DOCKER_REGISTRY-}daologservice
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_LogService/Dockerfile
    depends_on:
      daochain_rabbitmq:
        condition: service_healthy
    networks:
        - daonetwork

  daochain_notificationservice:
    image: ${DOCKER_REGISTRY-}daonotificationservice
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_NotificationService/Dockerfile
    depends_on:
      daochain_rabbitmq:
        condition: service_healthy
    networks:
        - daonetwork


  daochain_votingengine:
    image: ${DOCKER_REGISTRY-}daovotingengine
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_VotingEngine/Dockerfile
    depends_on:      
      daochain_rabbitmq:
        condition: service_healthy
    restart: always
    networks:
      - daonetwork

  daochain_reputationservice:
    image: ${DOCKER_REGISTRY-}daoreputationservice
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_ReputationService/Dockerfile
    depends_on:      
      daochain_rabbitmq:
        condition: service_healthy
    restart: always
    networks:
      - daonetwork
      
  daochain_webportal:
    image: ${DOCKER_REGISTRY-}daowebportal
    platform: linux/x86_64
    build:
      context: .
      dockerfile: DAO_WebPortal/Dockerfile
    depends_on:
      daochain_rabbitmq:
        condition: service_healthy
    
    networks:
      - daonetwork

networks:
  daonetwork:
    name: daonetwork
    driver: bridge







